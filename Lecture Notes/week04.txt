Pandas 

1. Panda Series: 1-d labeled data & Data Frame: 2-d labeled data, columns can be of diff types.
2. import, transform, visualize 
3. import pandas as pd (index + data)
4. Series is heterpgeneous. data can be of diff types.
5. ser[] or ser.loc[] to access values or the iloc function
6. DataFrame: a stack of Series & each observation has its index & each column has its own label
7. we can convert a list of Python dict to DataFrame
8. df[<column>] to access column & df[num] to access observations
9. df.pop(<column>) pop & remove a column. del df[<column>] does the same thing but does not pop it to a var. 

Data Ingestion: import data
1. csv, jason, html, sql tables & queries and etc. can be imported into pandas.
2. to have a peek at the data file: !head -10 <text file>

Descriptive Statistics
1. sd[<column>].describe()
2. df.corr(): pairwise correlations
3. min(), max(), mode(), median(), mean(), std(), any(), all() more: count(), clip(), rank(), round() 
4. filter.any() similar for all() 

Data Cleaning 
1. Missing values, fill gaps, drop fields, interpolation
2. common functions: replace(), fillna(), dropna(), interpolate(), isnull()

Data Visualisation
1. df.plot is used for simple plotting - bar(), box(), hist(), line graph without function
2. %matplotlib inline is used for simple plotting 

Frequent Data Operations 
1. df["col1"], df[df[] > 0], df["col4"] = broadcast functions - assignment , df.loc[], df.drop(), del, df.groupby()

Merging DataFrames 
1. pd.concat(): same df - stacking, diff df - join in SQL with the operation of inner join, left.append(right), pd.merge() - remove duplicates

String Operations
1. str.split(), str.contains(), str.replace(), str.extract()

Parsing Timestamps
1. unix time: number of seconds since 1970, 1, 1 - 00:00:00 UTC (int64)
2. <M8[ns]: to_datetime() 2015-12-24 13:00:00 
3. sort_values() to sort timestamps

